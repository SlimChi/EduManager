import React from 'react';
import {useParams, useNavigate} from 'react-router-dom';
import {Container, Badge, Card, Accordion, ListGroup} from 'react-bootstrap';
import {
    FiBook, FiClock, FiList, FiArrowRight,
    FiBarChart2, FiPercent, FiCode, FiTriangle, FiTrendingUp,
    FiAward, FiActivity, FiUsers, FiEdit, FiLayers
} from 'react-icons/fi';
import BackButton from "../components/navigation/BackButton";
import {motion} from 'framer-motion';
import "../styles/programmeBo.css"

const ProgrammeTerminaleMaths_B = () => {
    const {classId} = useParams();
    const navigate = useNavigate();

    // Structure du programme
    const programme = {
        description: {
            title: "Math√©matiques - Terminale Professionnelle (Groupement B)",
            content: "Programme approfondi avec une orientation sp√©cifique pour le groupement B.",
            emoji: "üßÆ",
            color: "#5f27cd"
        },
        preambule: {
            title: "Pr√©ambule commun",
            emoji: "üìú",
            color: "#1dd1a1",
            sections: [
                {
                    title: "Intentions majeures",
                    emoji: "üéØ",
                    icon: <FiAward size={18}/>,
                    content: [
                        "Approfondir les notions math√©matiques en lien avec les sp√©cialit√©s professionnelles",
                        "D√©velopper des comp√©tences pour la r√©solution de probl√®mes complexes",
                        "Pr√©parer √† la poursuite d'√©tudes ou √† l'insertion professionnelle",
                        "Renforcer les automatismes et la rigueur math√©matique",
                        "Utiliser les outils num√©riques pour mod√©liser et r√©soudre des probl√®mes"
                    ]
                },
                {
                    title: "Comp√©tences travaill√©es",
                    emoji: "üí™",
                    icon: <FiActivity size={18}/>,
                    content: [
                        "Mod√©liser des situations professionnelles avec des outils math√©matiques",
                        "Analyser et interpr√©ter des donn√©es statistiques",
                        "R√©soudre des probl√®mes alg√©briques et g√©om√©triques",
                        "Programmer des algorithmes pour automatiser des t√¢ches",
                        "Communiquer des r√©sultats avec pr√©cision"
                    ]
                },
                {
                    title: "Lignes directrices",
                    emoji: "üß≠",
                    icon: <FiEdit size={18}/>,
                    content: [
                        "Lien fort avec les sp√©cialit√©s professionnelles du groupement B",
                        "Utilisation syst√©matique des outils num√©riques",
                        "Approche concr√®te et appliqu√©e des concepts math√©matiques",
                        "Travail sur des situations professionnelles r√©elles",
                        "Renforcement des automatismes de calcul"
                    ]
                }
            ]
        },
        organisation: {
            title: "Organisation du programme",
            emoji: "üóÇÔ∏è",
            color: "#ff6b6b",
            icon: <FiLayers size={18}/>,
            content: [
                "Statistique et probabilit√©s (2 modules)",
                "Alg√®bre - Analyse (4 modules)",
                "G√©om√©trie (1 module)",
                "Algorithmique et programmation",
                "Compl√©ments : Automatismes, Vocabulaire logique"
            ]
        },
        chapitres: [
            {
                id: "stats",
                title: "Statistique et probabilit√©s",
                emoji: "üìä",
                icon: <FiBarChart2 size={18}/>,
                color: "#ff6b6b",
                duration: "25h",
                sequences: 6
            },
            {
                id: "algebre",
                title: "Alg√®bre ‚Äì Analyse",
                emoji: "‚ûó",
                icon: <FiPercent size={18}/>,
                color: "#48dbfb",
                duration: "35h",
                sequences: 9
            },
            {
                id: "geometrie",
                title: "G√©om√©trie",
                emoji: "üìê",
                icon: <FiTriangle size={18}/>,
                color: "#1dd1a1",
                duration: "20h",
                sequences: 5
            },
            {
                id: "algo",
                title: "Algorithmique",
                emoji: "üíª",
                icon: <FiCode size={18}/>,
                color: "#5f27cd",
                duration: "15h",
                sequences: 4
            }
        ],
        domaines: [
            {
                id: "stats",
                title: "Statistique et probabilit√©s",
                emoji: "üìä",
                color: "#ff6b6b",
                modules: [
                    {
                        title: "Statistique √† deux variables",
                        emoji: "üìà",
                        objectifs: [
                            "Approfondir la notion d'ajustement",
                            "Utiliser des ajustements pour interpoler ou extrapoler des valeurs",
                            "Travailler sur des situations professionnelles et √©conomiques"
                        ],
                        capacites: [
                            "Choisir un mod√®le adapt√© pour un ajustement",
                            "Utiliser des outils num√©riques pour r√©aliser des ajustements",
                            "Interpr√©ter des r√©sultats statistiques",
                            "Effectuer des changements de variables pour des ajustements affines"
                        ],
                        connaissances: [
                            "Ajustement d'un nuage de points",
                            "Coefficient de d√©termination",
                            "Mod√®les lin√©aires et non lin√©aires",
                            "Changements de variables (logarithmes, exponentielles)"
                        ]
                    },
                    {
                        title: "Probabilit√©s",
                        emoji: "üé≤",
                        objectifs: [
                            "Mod√©liser des situations al√©atoires complexes",
                            "Utiliser les arbres de probabilit√©s pond√©r√©s",
                            "Travailler sur des probl√®mes concrets (√©conomie, sant√©, etc.)"
                        ],
                        capacites: [
                            "Construire des arbres de probabilit√©s pond√©r√©s",
                            "Calculer des probabilit√©s conditionnelles",
                            "Utiliser la formule des probabilit√©s totales",
                            "Reconna√Ætre des √©v√©nements ind√©pendants"
                        ],
                        connaissances: [
                            "Arbres de probabilit√©s pond√©r√©s",
                            "Probabilit√©s conditionnelles",
                            "Formule des probabilit√©s totales",
                            "Ind√©pendance de deux √©v√©nements"
                        ]
                    }
                ]
            },
            {
                id: "algebre",
                title: "Alg√®bre - Analyse",
                emoji: "‚ûó",
                color: "#48dbfb",
                modules: [
                    {
                        title: "Suites num√©riques",
                        emoji: "üî¢",
                        objectifs: [
                            "Mod√©liser des ph√©nom√®nes discrets",
                            "√âtudier les suites g√©om√©triques",
                            "R√©soudre des probl√®mes concrets avec des suites"
                        ],
                        capacites: [
                            "Calculer des termes de suites g√©om√©triques",
                            "D√©terminer le sens de variation d'une suite g√©om√©trique",
                            "Calculer la somme des n premiers termes",
                            "Repr√©senter graphiquement des suites"
                        ],
                        connaissances: [
                            "Suites g√©om√©triques (d√©finition, expression)",
                            "Variation des suites g√©om√©triques",
                            "Somme des termes d'une suite g√©om√©trique",
                            "Lien avec les fonctions exponentielles"
                        ]
                    },
                    {
                        title: "Fonctions polyn√¥mes de degr√© 3",
                        emoji: "üìâ",
                        objectifs: [
                            "√âtudier des fonctions plus complexes",
                            "Approfondir les techniques de d√©rivation",
                            "R√©soudre des probl√®mes d'optimisation"
                        ],
                        capacites: [
                            "D√©river des fonctions polyn√¥mes de degr√© 3",
                            "√âtudier les variations d'une fonction",
                            "D√©terminer des extremums",
                            "R√©soudre des √©quations polynomiales"
                        ],
                        connaissances: [
                            "Fonction cube et ses propri√©t√©s",
                            "D√©riv√©e des fonctions polyn√¥mes",
                            "Tableaux de variations",
                            "Extremums locaux"
                        ]
                    },
                    {
                        title: "Fonctions exponentielles",
                        emoji: "üìà",
                        objectifs: [
                            "Mod√©liser des ph√©nom√®nes exponentiels",
                            "Utiliser les propri√©t√©s des fonctions exponentielles",
                            "R√©soudre des √©quations exponentielles"
                        ],
                        capacites: [
                            "Repr√©senter graphiquement des fonctions exponentielles",
                            "Utiliser les propri√©t√©s op√©ratoires",
                            "R√©soudre des √©quations du type q^x = a",
                            "Faire le lien avec les suites g√©om√©triques"
                        ],
                        connaissances: [
                            "Fonctions exponentielles de base q",
                            "Variations des fonctions exponentielles",
                            "Propri√©t√©s op√©ratoires",
                            "Lien avec les ph√©nom√®nes d'√©volution"
                        ]
                    },
                    {
                        title: "Logarithme d√©cimal",
                        emoji: "üìä",
                        objectifs: [
                            "Introduire la fonction logarithme",
                            "Utiliser les propri√©t√©s du logarithme d√©cimal",
                            "R√©soudre des probl√®mes concrets"
                        ],
                        capacites: [
                            "Repr√©senter graphiquement la fonction logarithme",
                            "Utiliser les propri√©t√©s op√©ratoires",
                            "R√©soudre des √©quations logarithmiques",
                            "Utiliser le papier semi-logarithmique"
                        ],
                        connaissances: [
                            "Fonction logarithme d√©cimal",
                            "Relation avec la fonction exponentielle",
                            "Propri√©t√©s op√©ratoires",
                            "Applications pratiques"
                        ]
                    }
                ]
            },
            {
                id: "geometrie",
                title: "G√©om√©trie",
                emoji: "üìê",
                color: "#1dd1a1",
                modules: [
                    {
                        title: "Vecteurs dans l'espace",
                        emoji: "üß≠",
                        objectifs: [
                            "√âtendre les notions vectorielles √† l'espace",
                            "Travailler sur des probl√®mes concrets de g√©om√©trie dans l'espace",
                            "Pr√©parer √† des applications professionnelles"
                        ],
                        capacites: [
                            "D√©terminer les coordonn√©es d'un vecteur",
                            "Calculer des normes de vecteurs",
                            "Effectuer des op√©rations vectorielles",
                            "Reconna√Ætre des vecteurs colin√©aires"
                        ],
                        connaissances: [
                            "Coordonn√©es dans l'espace",
                            "Norme d'un vecteur",
                            "Op√©rations sur les vecteurs",
                            "Colin√©arit√©"
                        ]
                    }
                ]
            },
            {
                id: "algo",
                title: "Algorithmique",
                emoji: "üíª",
                color: "#5f27cd",
                modules: [
                    {
                        title: "Algorithmique et programmation",
                        emoji: "ü§ñ",
                        objectifs: [
                            "Approfondir les comp√©tences en programmation",
                            "D√©velopper des algorithmes plus complexes",
                            "Automatiser des t√¢ches math√©matiques"
                        ],
                        capacites: [
                            "D√©composer des probl√®mes en sous-probl√®mes",
                            "Utiliser des structures conditionnelles et des boucles",
                            "Manipuler diff√©rents types de variables",
                            "Cr√©er et utiliser des fonctions"
                        ],
                        connaissances: [
                            "Structures de contr√¥le",
                            "Types de variables",
                            "Fonctions en Python",
                            "Manipulation de listes"
                        ]
                    }
                ]
            }
        ],
        complements: [
            {
                id: "automatismes",
                title: "Automatismes",
                emoji: "‚ö°",
                color: "#ff9ff3",
                icon: <FiActivity size={18}/>,
                content: [
                    "Calcul de probabilit√©s (conditionnelles, totales)",
                    "Manipulation des suites arithm√©tiques et g√©om√©triques",
                    "D√©rivation des fonctions polyn√¥mes",
                    "R√©solution d'√©quations polynomiales",
                    "Calcul vectoriel dans l'espace",
                    "Programmation d'algorithmes de base"
                ]
            },
            {
                id: "vocabulaire",
                title: "Vocabulaire logique",
                emoji: "üî§",
                color: "#48dbfb",
                icon: <FiBook size={18}/>,
                content: [
                    "Notations ensemblistes (‚àà, ‚äÇ, ‚à©, ‚à™)",
                    "Connecteurs logiques (et, ou, implication)",
                    "Quantificateurs",
                    "Raisonnement par l'absurde",
                    "Utilisation de contre-exemples",
                    "Diff√©rents types d'√©galit√©s et √©quations"
                ]
            }
        ],
        programmeComplementaire: {
            title: "Programme compl√©mentaire pour poursuite d'√©tudes",
            icon: <FiTrendingUp size={20}/>,
            color: "#ff9ff3",
            modules: [
                {
                    name: "Calcul int√©gral",
                    content: "D√©terminer les primitives des fonctions usuelles par lecture inverse d‚Äôun tableau des d√©riv√©es. " +
                        "D√©terminer, avec ou sans outils num√©riques, les primitives d‚Äôune " +
                        "somme de fonctions, du produit d‚Äôune fonction par un r√©el. " +
                        "Calculer l‚Äôint√©grale, sur un intervalle " +
                        "d‚Äôune fonction ∆í admettant une primitive F, avec ou sans outils num√©riques. " +
                        "Interpr√©ter l‚Äôint√©grale d‚Äôune fonction d√©finie et positive sur un intervalle comme une aire."
                },
                {
                    name: "Fonctions logarithme n√©p√©rien et exponentielle ",
                    content: "√âtudier les variations et repr√©senter graphiquement la fonction logarithme n√©p√©rien, " +
                        "sur un intervalle donn√©. Utiliser les propri√©t√©s op√©ratoires de la fonction logarithme n√©p√©rien " +
                        "pour transformer des √©critures num√©riques ou litt√©rales. Connaissances Fonction logarithme " +
                        "n√©p√©rien x ‚Ü¶ ln(x). D√©finition du nombre e. Propri√©t√©s op√©ratoires de la fonction logarithme " +
                        "n√©p√©rien. Utiliser les propri√©t√©s op√©ratoires de la fonction exponentielle pour transformer des √©critures num√©riques ou litt√©rales. " +
                        "√âtudier les variations et repr√©senter graphiquement la fonction exponentielle sur ‚Ñù. "
                },
                {
                    name: "Nombres complexes ",
                    content: "Calculer et interpr√©ter g√©om√©triquement dans le plan rapport√© √†" +
                        " un rep√®re orthonorm√© direct, la partie r√©elle, la partie imaginaire,le conjugu√©, " +
                        "le module d‚Äôun nombre complexe et un argument d‚Äôun nombre complexe non nul. " +
                        "Passer de la forme alg√©brique √† la forme trigonom√©trique et r√©ciproquement. "
                },
                {
                    name: "Produit scalaire de deux vecteurs du plan rapport√© √† un rep√®re orthonorm√©",
                    content: "Utiliser les trois expressions du produit scalaire de " +
                        "deux vecteurs pour d√©terminer des longueurs et des angles.Reconna√Ætre des vecteurs " +
                        "orthogonaux, √† l‚Äôaide de leurs coordonn√©es dans un rep√®re orthonorm√©. "
                }
            ]
        }
    };

    const handleChapitreClick = (chapitreId) => {
        navigate(`/programmes/math/${classId}/ProgrammeTerminaleMaths_B/sequences/${chapitreId}`);
    };

    // Animation variants
    const cardVariants = {
        hover: {
            y: -5,
            boxShadow: "0 10px 20px rgba(0,0,0,0.1)"
        }
    };

    return (
        <Container className="programme-container py-4">
            <BackButton/>

            {/* En-t√™te du programme */}
            <motion.div
                initial={{opacity: 0, y: 20}}
                animate={{opacity: 1, y: 0}}
                transition={{duration: 0.5}}
            >
                <Card className="mb-4 border-0 shadow-sm" style={{backgroundColor: '#f8f9fa'}}>
                    <Card.Body className="d-flex align-items-center">
                        <div className="me-3 display-4" style={{color: programme.description.color}}>
                            {programme.description.emoji}
                        </div>
                        <div>
                            <h2 className="mb-1">{programme.description.title}</h2>
                            <p className="mb-0 text-muted">{programme.description.content}</p>
                        </div>
                    </Card.Body>
                </Card>
            </motion.div>

            {/* Pr√©ambule */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.2, duration: 0.5}}
            >
                <Accordion className="mb-4">
                    <Accordion.Item eventKey="0" className="border-0">
                        <Accordion.Header className="p-0">
                            <div className="d-flex align-items-center">
                                <div
                                    className="d-flex align-items-center justify-content-center me-3"
                                    style={{
                                        width: "40px",
                                        height: "40px",
                                        borderRadius: "8px",
                                        backgroundColor: `${programme.preambule.color}20`,
                                        color: programme.preambule.color
                                    }}
                                >
                                    <span style={{fontSize: "20px"}}>{programme.preambule.emoji}</span>
                                </div>
                                <h4 className="mb-0">{programme.preambule.title}</h4>
                            </div>
                        </Accordion.Header>
                        <Accordion.Body className="p-0 pt-3">
                            {programme.preambule.sections.map((section, index) => (
                                <Card key={index} className="mb-3 border-0 shadow-sm">
                                    <Card.Body>
                                        <div className="d-flex align-items-center mb-3">
                                            <div
                                                className="d-flex align-items-center justify-content-center me-3"
                                                style={{
                                                    width: "36px",
                                                    height: "36px",
                                                    borderRadius: "8px",
                                                    backgroundColor: `${programme.preambule.color}10`,
                                                    color: programme.preambule.color
                                                }}
                                            >
                                                <span style={{fontSize: "18px"}}>{section.emoji}</span>
                                            </div>
                                            <h5 className="mb-0">{section.title}</h5>
                                        </div>
                                        <ul className="mb-0">
                                            {section.content.map((item, i) => (
                                                <li key={i} className="mb-2 d-flex align-items-start">
                                                    <span className="me-2"
                                                          style={{color: programme.preambule.color}}>‚Ä¢</span>
                                                    {item}
                                                </li>
                                            ))}
                                        </ul>
                                    </Card.Body>
                                </Card>
                            ))}
                        </Accordion.Body>
                    </Accordion.Item>
                </Accordion>
            </motion.div>

            {/* Organisation du programme */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.3, duration: 0.5}}
            >
                <Card className="mb-4 border-0 shadow-sm">
                    <Card.Body>
                        <div className="d-flex align-items-center mb-3">
                            <div
                                className="d-flex align-items-center justify-content-center me-3"
                                style={{
                                    width: "40px",
                                    height: "40px",
                                    borderRadius: "8px",
                                    backgroundColor: `${programme.organisation.color}20`,
                                    color: programme.organisation.color
                                }}
                            >
                                <span style={{fontSize: "20px"}}>{programme.organisation.emoji}</span>
                            </div>
                            <h4 className="mb-0">{programme.organisation.title}</h4>
                        </div>
                        <ul className="mb-0">
                            {programme.organisation.content.map((item, index) => (
                                <li key={index} className="mb-2 d-flex align-items-start">
                                    <span className="me-2" style={{color: programme.organisation.color}}>‚Ä¢</span>
                                    {item}
                                </li>
                            ))}
                        </ul>
                    </Card.Body>
                </Card>
            </motion.div>

            {/* Chapitres principaux */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.4, duration: 0.5}}
            >
                <h3 className="mb-4 d-flex align-items-center">
                    <FiBook className="me-2"/>
                    Chapitres du Programme
                </h3>

                <div className="row g-4">
                    {programme.chapitres.map((chapitre) => (
                        <motion.div
                            key={chapitre.id}
                            className="col-md-6 col-lg-3"
                            whileHover="hover"
                            variants={cardVariants}
                        >
                            <Card
                                className="h-100 shadow-sm border-0"
                                style={{
                                    borderRadius: "12px",
                                    borderTop: `4px solid ${chapitre.color}`,
                                    cursor: "pointer"
                                }}
                                onClick={() => handleChapitreClick(chapitre.id)}
                            >
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${chapitre.color}20`,
                                                color: chapitre.color
                                            }}
                                        >
                                            <span style={{fontSize: "24px"}}>{chapitre.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{chapitre.title}</h5>
                                        </div>
                                    </div>

                                    <div className="d-flex justify-content-between mb-3">
                                        <Badge pill bg="light" text="dark" className="d-flex align-items-center">
                                            <FiClock className="me-1"/> {chapitre.duration}
                                        </Badge>
                                        <Badge pill bg="light" text="dark" className="d-flex align-items-center">
                                            <FiList className="me-1"/> {chapitre.sequences} s√©q.
                                        </Badge>
                                    </div>

                                    <div className="mt-auto text-end">
                                        <small
                                            className="text-primary fw-bold d-flex align-items-center justify-content-end">
                                            Explorer <FiArrowRight className="ms-1"/>
                                        </small>
                                    </div>
                                </Card.Body>
                            </Card>
                        </motion.div>
                    ))}
                </div>
            </motion.div>

            {/* Domaines du programme */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.5, duration: 0.5}}
            >
                <h3 className="mt-5 mb-4 d-flex align-items-center">
                    <FiBook className="me-2"/>
                    Domaines du Programme
                </h3>

                <div className="row g-4">
                    {programme.domaines.map((domaine) => (
                        <div key={domaine.id} className="col-md-6 col-lg-3">
                            <Card className="h-100 shadow-sm border-0">
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${domaine.color}20`,
                                                color: domaine.color
                                            }}
                                        >
                                            <span style={{fontSize: "24px"}}>{domaine.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{domaine.title}</h5>
                                        </div>
                                    </div>

                                    <Accordion flush>
                                        {domaine.modules.map((module, i) => (
                                            <Accordion.Item key={`module-${i}`} eventKey={i.toString()}
                                                            className="border-0">
                                                <Accordion.Header className="p-0 bg-transparent">
                                                    <div className="d-flex align-items-center">
                                                        <span className="me-2"
                                                              style={{fontSize: "18px"}}>{module.emoji}</span>
                                                        <small className="fw-bold">{module.title}</small>
                                                    </div>
                                                </Accordion.Header>
                                                <Accordion.Body className="p-0 pt-2">
                                                    <div className="mb-3">
                                                        <h6 className="small fw-bold">Objectifs:</h6>
                                                        <ul className="small mb-2">
                                                            {module.objectifs.map((obj, j) => (
                                                                <li key={`obj-${i}-${j}`}>{obj}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                    <div className="mb-3">
                                                        <h6 className="small fw-bold">Capacit√©s:</h6>
                                                        <ul className="small mb-2">
                                                            {module.capacites.map((cap, j) => (
                                                                <li key={`cap-${i}-${j}`}>{cap}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                    <div>
                                                        <h6 className="small fw-bold">Connaissances:</h6>
                                                        <ul className="small mb-0">
                                                            {module.connaissances.map((con, j) => (
                                                                <li key={`con-${i}-${j}`}>{con}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                </Accordion.Body>
                                            </Accordion.Item>
                                        ))}
                                    </Accordion>
                                </Card.Body>
                            </Card>
                        </div>
                    ))}
                </div>
            </motion.div>

            {/* Compl√©ments */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.6, duration: 0.5}}
            >
                <h3 className="mt-5 mb-4 d-flex align-items-center">
                    <FiBook className="me-2"/>
                    Compl√©ments
                </h3>

                <div className="row g-4">
                    {programme.complements.map((complement) => (
                        <div key={complement.id} className="col-md-6">
                            <Card className="h-100 shadow-sm border-0">
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${complement.color}20`,
                                                color: complement.color
                                            }}
                                        >
                                            <span style={{fontSize: "24px"}}>{complement.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{complement.title}</h5>
                                        </div>
                                    </div>

                                    <ul className="mb-0">
                                        {complement.content.map((item, i) => (
                                            <li key={`item-${i}`} className="mb-1 small">
                                                {item.startsWith("- ") ? (
                                                    <span className="ms-3 d-block">{item}</span>
                                                ) : (
                                                    item
                                                )}
                                            </li>
                                        ))}
                                    </ul>
                                </Card.Body>
                            </Card>
                        </div>
                    ))}
                </div>
            </motion.div>

            {/* Programme compl√©mentaire */}
            {/* Programme compl√©mentaire */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.7, duration: 0.5}}
            >
                <h3 className="mt-5 mb-4 d-flex align-items-center">
                    <FiTrendingUp className="me-2"/>
                    Programme compl√©mentaire pour poursuite d'√©tudes
                </h3>

                <Card className="shadow-sm border-0 mb-4">
                    <Card.Body>
                        <div className="d-flex align-items-center mb-3">
                            <div
                                className="d-flex align-items-center justify-content-center me-3"
                                style={{
                                    width: "48px",
                                    height: "48px",
                                    borderRadius: "10px",
                                    backgroundColor: `${programme.programmeComplementaire.color}20`,
                                    color: programme.programmeComplementaire.color
                                }}
                            >
                                {programme.programmeComplementaire.icon}
                            </div>
                            <h4 className="mb-0 fw-bold">{programme.programmeComplementaire.title}</h4>
                        </div>

                        <Accordion flush>
                            {programme.programmeComplementaire.modules.map((module, index) => (
                                <Accordion.Item
                                    key={`mod-${index}`}
                                    eventKey={index.toString()}
                                    className="border-0 mb-2"
                                >
                                    <Accordion.Header className="p-0 bg-transparent">
                                        <div className="d-flex align-items-center">
                                            <div
                                                className="d-flex align-items-center justify-content-center me-3"
                                                style={{
                                                    width: "36px",
                                                    height: "36px",
                                                    borderRadius: "8px",
                                                    backgroundColor: `${programme.programmeComplementaire.color}10`,
                                                    color: programme.programmeComplementaire.color
                                                }}
                                            >
                                                <FiBook size={16}/>
                                            </div>
                                            <h6 className="fw-bold mb-0">{module.name}</h6>
                                        </div>
                                    </Accordion.Header>
                                    <Accordion.Body className="p-0 pt-2 ps-4">
                                        <div className="ps-4 border-start"
                                             style={{borderColor: `${programme.programmeComplementaire.color}50`}}>
                                            <p className="mb-0 ">{module.content}</p>
                                        </div>
                                    </Accordion.Body>
                                </Accordion.Item>
                            ))}
                        </Accordion>
                    </Card.Body>
                </Card>
            </motion.div>
        </Container>
    );
};

export default ProgrammeTerminaleMaths_B;