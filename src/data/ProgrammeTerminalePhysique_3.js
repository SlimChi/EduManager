import React from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Container, Badge, Card, Accordion, ListGroup } from 'react-bootstrap';
import {
    FiBook, FiClock, FiList, FiArrowRight, FiZap,
    FiThermometer, FiSettings, FiDroplet, FiRadio,
    FiShield, FiAward, FiActivity, FiUsers, FiEdit, FiLayers
} from 'react-icons/fi';
import BackButton from "../components/navigation/BackButton";
import { motion } from 'framer-motion';

const ProgrammeTerminalePhysique_3 = () => {
    const { classId } = useParams();
    const navigate = useNavigate();

    // Structure du programme avec ajout d'ic√¥nes et couleurs
    const programme = {
        description: {
            title: "Physique-Chimie - Terminale Professionnelle (Groupement 3)",
            content: "Programme ax√© sur l'efficacit√© √©nerg√©tique des b√¢timents et l'√©coresponsabilit√©, avec un approfondissement particulier du domaine thermique.",
            emoji: "üèóÔ∏è",
            color: "#5f27cd"
        },
        preambule: {
            title: "Pr√©ambule commun",
            emoji: "üìú",
            color: "#1dd1a1",
            sections: [
                {
                    title: "Intentions majeures",
                    emoji: "üéØ",
                    icon: <FiAward size={18} />,
                    content: [
                        "Consolider les acquis dans les domaines des math√©matiques et de la physique-chimie",
                        "Approfondir la formation aux activit√©s de nature math√©matique, physique et chimique",
                        "Fournir des outils utiles aux enseignements g√©n√©raux et professionnels",
                        "Assurer les bases indispensables √† la formation tout au long de la vie",
                        "D√©velopper des comp√©tences transversales pour l'insertion professionnelle",
                        "Former des citoyens √©clair√©s face aux d√©fis √©nerg√©tiques et environnementaux"
                    ]
                },
                {
                    title: "Comp√©tences travaill√©es",
                    emoji: "üí™",
                    icon: <FiActivity size={18} />,
                    content: [
                        "S'approprier (rechercher, extraire et organiser l'information)",
                        "Analyser/Raisonner (√©mettre des conjectures, proposer des m√©thodes)",
                        "R√©aliser (mettre en ≈ìuvre des d√©marches, calculer, exp√©rimenter)",
                        "Valider (interpr√©ter des r√©sultats, argumenter, d√©montrer)",
                        "Communiquer (rendre compte, expliquer des d√©marches)"
                    ]
                },
                {
                    title: "Lignes directrices",
                    emoji: "üß≠",
                    icon: <FiEdit size={18} />,
                    content: [
                        "La coh√©rence entre math√©matiques et physique-chimie",
                        "La ma√Ætrise de la langue fran√ßaise",
                        "La co-intervention avec les enseignements professionnels",
                        "La diversit√© des activit√©s de l'√©l√®ve",
                        "Le travail exp√©rimental et num√©rique",
                        "L'√©valuation des acquis",
                        "L'int√©gration des enjeux du d√©veloppement durable"
                    ]
                }
            ]
        },
        organisation: {
            title: "Organisation du programme",
            emoji: "üóÇÔ∏è",
            color: "#ff6b6b",
            icon: <FiLayers size={18} />,
            content: [
                "√âlectricit√© (2 modules)",
                "Thermique (1 module approfondi)",
                "M√©canique (1 module)",
                "Chimie (1 module)",
                "Signaux (3 modules)",
                "Compl√©ments : D√©veloppement durable, Mesures et incertitudes, S√©curit√©"
            ]
        },
        chapitres: [
            {
                id: "electricite",
                title: "√âlectricit√©",
                emoji: "‚ö°",
                icon: <FiZap size={18} />,
                color: "#feca57",
                duration: "20h",
                sequences: 4,
                subtitle: "Production et distribution d'√©nergie"
            },
            {
                id: "thermique",
                title: "Thermique",
                emoji: "üå°Ô∏è",
                icon: <FiThermometer size={18} />,
                color: "#ff6b6b",
                duration: "25h",
                sequences: 5,
                subtitle: "Efficacit√© √©nerg√©tique et effet de serre"
            },
            {
                id: "mecanique",
                title: "M√©canique",
                emoji: "‚öôÔ∏è",
                icon: <FiSettings size={18} />,
                color: "#48dbfb",
                duration: "15h",
                sequences: 3,
                subtitle: "Mouvement et √©quilibre"
            },
            {
                id: "chimie",
                title: "Chimie",
                emoji: "üß™",
                icon: <FiDroplet size={18} />,
                color: "#1dd1a1",
                duration: "15h",
                sequences: 3,
                subtitle: "Mat√©riaux et environnement"
            },
            {
                id: "signaux",
                title: "Signaux",
                emoji: "üì°",
                icon: <FiRadio size={18} />,
                color: "#5f27cd",
                duration: "20h",
                sequences: 4,
                subtitle: "Transmission d'information"
            }
        ],
        domaines: [
            {
                id: "electricite",
                title: "√âlectricit√©",
                emoji: "‚ö°",
                color: "#feca57",
                modules: [
                    {
                        title: "Transport d'√©nergie",
                        emoji: "üîå",
                        objectifs: [
                            "Comprendre les principes de distribution d'√©nergie √©lectrique",
                            "Analyser l'effet Joule et son impact sur les pertes en ligne",
                            "Utiliser des transformateurs dans les r√©seaux de distribution"
                        ],
                        capacites: [
                            "Repr√©senter un r√©seau de distribution simplifi√©",
                            "Justifier le transport sous haute tension",
                            "Mettre en √©vidence le r√¥le des transformateurs",
                            "Calculer les pertes par effet Joule"
                        ],
                        connaissances: [
                            "Relation puissance/r√©sistance/tension",
                            "R√¥le des transformateurs (abaisseur/√©l√©vateur)",
                            "Pertes en ligne et efficacit√© √©nerg√©tique"
                        ]
                    },
                    {
                        title: "Stockage √©lectrochimique",
                        emoji: "üîã",
                        objectifs: [
                            "Comprendre les principes de stockage d'√©nergie",
                            "Comparer diff√©rentes technologies d'accumulateurs",
                            "√âvaluer l'√©nergie stock√©e dans un syst√®me"
                        ],
                        capacites: [
                            "R√©aliser une pile et mesurer sa tension",
                            "√âtudier charge/d√©charge d'un accumulateur",
                            "Calculer l'√©nergie stock√©e",
                            "Comparer des technologies (√©nergie/masse)"
                        ],
                        connaissances: [
                            "Transformations √©nerg√©tiques dans les piles",
                            "R√©actions d'oxydor√©duction aux √©lectrodes",
                            "Capacit√© des accumulateurs (Ah)"
                        ]
                    }
                ]
            },
            {
                id: "thermique",
                title: "Thermique",
                emoji: "üå°Ô∏è",
                color: "#ff6b6b",
                modules: [
                    {
                        title: "Rayonnement thermique",
                        emoji: "‚òÄÔ∏è",
                        objectifs: [
                            "Comprendre les principes du rayonnement thermique",
                            "Expliquer le m√©canisme de l'effet de serre",
                            "Analyser l'impact des activit√©s humaines"
                        ],
                        capacites: [
                            "Utiliser une cam√©ra thermique",
                            "Exp√©rimenter l'absorption IR",
                            "Expliquer l'effet de serre",
                            "Analyser des images thermographiques"
                        ],
                        connaissances: [
                            "Caract√©ristiques du rayonnement thermique",
                            "Gaz √† effet de serre (CO2, m√©thane...)",
                            "Impact des activit√©s humaines sur le climat"
                        ]
                    }
                ]
            },
            {
                id: "mecanique",
                title: "M√©canique",
                emoji: "‚öôÔ∏è",
                color: "#48dbfb",
                modules: [
                    {
                        title: "Cin√©matique",
                        emoji: "‚ÜóÔ∏è",
                        objectifs: [
                            "Caract√©riser le mouvement rectiligne",
                            "Analyser les relations vitesse/acc√©l√©ration",
                            "Interpr√©ter des graphiques de mouvement"
                        ],
                        capacites: [
                            "Mesurer vitesses et acc√©l√©rations",
                            "Identifier des mouvements √† partir de graphes",
                            "Calculer des variations de vitesse",
                            "Estimer des ordres de grandeur"
                        ],
                        connaissances: [
                            "Relations vitesse/acc√©l√©ration/dur√©e",
                            "Mouvement rectiligne uniforme/acc√©l√©r√©",
                            "Ordres de grandeur des vitesses"
                        ]
                    }
                ]
            },
            {
                id: "chimie",
                title: "Chimie",
                emoji: "üß™",
                color: "#1dd1a1",
                modules: [
                    {
                        title: "Oxydor√©duction",
                        emoji: "‚öóÔ∏è",
                        objectifs: [
                            "Pr√©voir des r√©actions d'oxydor√©duction",
                            "Prot√©ger les m√©taux contre la corrosion",
                            "Comprendre les m√©canismes de passivation"
                        ],
                        capacites: [
                            "Classer des couples oxydant/r√©ducteur",
                            "√âcrire des √©quations de r√©action",
                            "Mettre en ≈ìuvre une protection anodique",
                            "Exp√©rimenter la passivation"
                        ],
                        connaissances: [
                            "R√©actions d'oxydor√©duction",
                            "Ph√©nom√®ne de passivation",
                            "Protection par anode sacrificielle"
                        ]
                    }
                ]
            },
            {
                id: "signaux",
                title: "Signaux",
                emoji: "üì°",
                color: "#5f27cd",
                modules: [
                    {
                        title: "Choisir une source lumineuse",
                        emoji: "üí°",
                        objectifs: [
                            "Comparer l'efficacit√© √©nerg√©tique des sources",
                            "Analyser des spectres d'√©mission",
                            "Comprendre les propri√©t√©s des lasers"
                        ],
                        capacites: [
                            "Exploiter le spectre d‚Äô√©mission fourni d‚Äôune lampe. ",
                            "Comparer exp√©rimentalement l‚Äôefficacit√© √©nerg√©tique de deux sources lumineuses. ",
                            "Mettre en √©vidence exp√©rimentalement les propri√©t√©s du faisceau lumineux produit par un laser. "
                        ],
                        connaissances: [
                            "Savoir qu‚Äôune source lumineuse est caract√©ris√©e par son spectre d‚Äô√©mission. ",
                            "Conna√Ætre les caract√©ristiques spectrales √©l√©mentaires des sources lumineuses suivantes : " +
                            "soleil, lampe √† DEL, lampe √† incandescence, " +
                            "laser. Conna√Ætre la d√©finition de l‚Äôefficacit√© √©nerg√©tique d‚Äôune source lumineuse. ",
                            "Conna√Ætre les propri√©t√©s particuli√®res de la lumi√®re √©mise par les lasers. "
                        ]
                    },
                    {
                        title: "Transmettre l‚Äôinformation ",
                        emoji: "üì∂",
                        objectifs: [
                            "Comprendre les principes de transmission",
                            "Mettre en ≈ìuvre des syst√®mes de transmission",
                            "Utiliser des fibres optiques"
                        ],
                        capacites: [
                            "Mettre en ≈ìuvre un syst√®me de transmission d‚Äôinformations par propagation libre ou par propagation guid√©e. ",
                            "Identifier les √©l√©ments principaux de syst√®mes de transmission d‚Äôinformations utilis√©s dans la vie courante. ",

                        ],
                        connaissances: [
                            "Savoir que la transmission d‚Äôinformations s‚Äôappuie sur l‚Äô√©mission et la r√©ception d‚Äôune onde. ",
                            "Conna√Ætre les principaux types d‚Äôondes utilis√©es dans les syst√®mes de transmission d‚Äôinformations courants : " +
                            "ondes sonores, lumineuses, √©lectromagn√©tiques. ",
                            "Savoir que le fonctionnement d‚Äôune fibre optique repose sur le ph√©nom√®ne de r√©flexion totale."
                        ]
                    },
                    {
                        title: "Att√©nuer une onde sonore par transmission ",
                        emoji: "üîá",
                        objectifs: [
                            "Mesurer l'att√©nuation sonore",
                            "Classer des mat√©riaux isolants",
                            "Calculer des indices d'affaiblissement"
                        ],
                        capacites: [
                            "Montrer exp√©rimentalement que le coefficient d‚Äôatt√©nuation du son par une plaque plane d√©pend de " +
                            "l‚Äô√©paisseur de la plaque et de la nature des mat√©riaux qui la constituent. ",
                            "Classer exp√©rimentalement deux mat√©riaux en fonction de leur propension √† att√©nuer une onde sonore. ",
                            "Calculer l‚Äôindice d‚Äôaffaiblissement acoustique √† partir du coefficient d‚Äôatt√©nuation en utilisant une relation fournie "
                        ],
                        connaissances: [
                            "Savoir que le coefficient d‚Äôatt√©nuation d‚Äôune onde sonore traversant une plaque plane est " +
                            "le rapport de la pression acoustique incidente √† la pression acoustique transmise. ",
                            "Savoir que l‚Äôindice d‚Äôaffaiblissement acoustique (en dB) est la diff√©rence entre " +
                            "les niveaux d‚Äôintensit√© acoustique de l‚Äôonde incidente et de l‚Äôonde transmise. "
                        ]
                    }
                ]
            }
        ],
        complements: [
            {
                id: "developpement-durable",
                title: "D√©veloppement Durable",
                emoji: "üå±",
                color: "#1dd1a1",
                icon: <FiShield size={18} />,
                content: [
                    "√âtude de rendement des syst√®mes de chauffage",
                    "Analyse d'impact environnemental des mat√©riaux",
                    "Empreinte carbone des activit√©s num√©riques",
                    "Optimisation de l'√©clairage durable",
                    "√âtude des gaz √† effet de serre",
                    "Solutions pour l'efficacit√© √©nerg√©tique"
                ]
            },
            {
                id: "mesures",
                title: "Mesures et incertitudes",
                emoji: "üìè",
                color: "#48dbfb",
                icon: <FiActivity size={18} />,
                content: [
                    "Identifier les sources d'erreurs",
                    "Quantifier les incertitudes de mesure",
                    "Pr√©senter des r√©sultats avec chiffres significatifs",
                    "Analyser des s√©ries de mesures",
                    "Comparer avec des valeurs de r√©f√©rence",
                    "Comprendre les enjeux des incertitudes"
                ]
            },
            {
                id: "securite",
                title: "S√©curit√©",
                emoji: "‚ö†Ô∏è",
                color: "#ff6b6b",
                icon: <FiShield size={18} />,
                content: [
                    "Utilisation des √©quipements de protection",
                    "Identification des pictogrammes de danger",
                    "Tri s√©lectif des d√©chets chimiques",
                    "Protection contre les risques √©lectriques",
                    "Dangers des sources lumineuses (laser)",
                    "Protection contre le bruit"
                ]
            }
        ]
    };

    const handleChapitreClick = (chapitreId) => {
        navigate(`/programmes/science/${classId}/ProgrammeTerminalePhysique_3/sequences/${chapitreId}`);
    };

    // Animation variants
    const cardVariants = {
        hover: {
            y: -5,
            boxShadow: "0 10px 20px rgba(0,0,0,0.1)"
        }
    };

    return (
        <Container className="programme-container py-4">
            <BackButton />

            {/* En-t√™te du programme */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
            >
                <Card className="mb-4 border-0 shadow-sm" style={{ backgroundColor: '#f8f9fa' }}>
                    <Card.Body className="d-flex align-items-center">
                        <div className="me-3 display-4" style={{ color: programme.description.color }}>
                            {programme.description.emoji}
                        </div>
                        <div>
                            <h2 className="mb-1">{programme.description.title}</h2>
                            <p className="mb-0 text-muted">{programme.description.content}</p>
                        </div>
                    </Card.Body>
                </Card>
            </motion.div>

            {/* Pr√©ambule */}
            <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.2, duration: 0.5 }}
            >
                <Accordion className="mb-4">
                    <Accordion.Item eventKey="0" className="border-0">
                        <Accordion.Header className="p-0">
                            <div className="d-flex align-items-center">
                                <div
                                    className="d-flex align-items-center justify-content-center me-3"
                                    style={{
                                        width: "40px",
                                        height: "40px",
                                        borderRadius: "8px",
                                        backgroundColor: `${programme.preambule.color}20`,
                                        color: programme.preambule.color
                                    }}
                                >
                                    <span style={{ fontSize: "20px" }}>{programme.preambule.emoji}</span>
                                </div>
                                <h4 className="mb-0">{programme.preambule.title}</h4>
                            </div>
                        </Accordion.Header>
                        <Accordion.Body className="p-0 pt-3">
                            {programme.preambule.sections.map((section, index) => (
                                <Card key={index} className="mb-3 border-0 shadow-sm">
                                    <Card.Body>
                                        <div className="d-flex align-items-center mb-3">
                                            <div
                                                className="d-flex align-items-center justify-content-center me-3"
                                                style={{
                                                    width: "36px",
                                                    height: "36px",
                                                    borderRadius: "8px",
                                                    backgroundColor: `${programme.preambule.color}10`,
                                                    color: programme.preambule.color
                                                }}
                                            >
                                                <span style={{ fontSize: "18px" }}>{section.emoji}</span>
                                            </div>
                                            <h5 className="mb-0">{section.title}</h5>
                                        </div>
                                        <ul className="mb-0">
                                            {section.content.map((item, i) => (
                                                <li key={i} className="mb-2 d-flex align-items-start">
                                                    <span className="me-2" style={{ color: programme.preambule.color }}>‚Ä¢</span>
                                                    {item}
                                                </li>
                                            ))}
                                        </ul>
                                    </Card.Body>
                                </Card>
                            ))}
                        </Accordion.Body>
                    </Accordion.Item>
                </Accordion>
            </motion.div>

            {/* Organisation du programme */}
            <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.3, duration: 0.5 }}
            >
                <Card className="mb-4 border-0 shadow-sm">
                    <Card.Body>
                        <div className="d-flex align-items-center mb-3">
                            <div
                                className="d-flex align-items-center justify-content-center me-3"
                                style={{
                                    width: "40px",
                                    height: "40px",
                                    borderRadius: "8px",
                                    backgroundColor: `${programme.organisation.color}20`,
                                    color: programme.organisation.color
                                }}
                            >
                                <span style={{ fontSize: "20px" }}>{programme.organisation.emoji}</span>
                            </div>
                            <h4 className="mb-0">{programme.organisation.title}</h4>
                        </div>
                        <ul className="mb-0">
                            {programme.organisation.content.map((item, index) => (
                                <li key={index} className="mb-2 d-flex align-items-start">
                                    <span className="me-2" style={{ color: programme.organisation.color }}>‚Ä¢</span>
                                    {item}
                                </li>
                            ))}
                        </ul>
                    </Card.Body>
                </Card>
            </motion.div>

            {/* Chapitres principaux */}
            <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.4, duration: 0.5 }}
            >
                <h3 className="mb-4 d-flex align-items-center">
                    <FiBook className="me-2" />
                    Chapitres du Programme
                </h3>

                <div className="row g-4">
                    {programme.chapitres.map((chapitre) => (
                        <motion.div
                            key={chapitre.id}
                            className="col-md-6 col-lg-4"
                            whileHover="hover"
                            variants={cardVariants}
                        >
                            <Card
                                className="h-100 shadow-sm border-0"
                                style={{
                                    borderRadius: "12px",
                                    borderTop: `4px solid ${chapitre.color}`,
                                    cursor: "pointer"
                                }}
                                onClick={() => handleChapitreClick(chapitre.id)}
                            >
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${chapitre.color}20`,
                                                color: chapitre.color
                                            }}
                                        >
                                            <span style={{ fontSize: "24px" }}>{chapitre.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{chapitre.title}</h5>
                                            <small className="text-muted">{chapitre.subtitle}</small>
                                        </div>
                                    </div>

                                    <div className="d-flex justify-content-between mb-3">
                                        <Badge pill bg="light" text="dark" className="d-flex align-items-center">
                                            <FiClock className="me-1" /> {chapitre.duration}
                                        </Badge>
                                        <Badge pill bg="light" text="dark" className="d-flex align-items-center">
                                            <FiList className="me-1" /> {chapitre.sequences} s√©q.
                                        </Badge>
                                    </div>

                                    <div className="mt-auto text-end">
                                        <small className="text-primary fw-bold d-flex align-items-center justify-content-end">
                                            Explorer <FiArrowRight className="ms-1" />
                                        </small>
                                    </div>
                                </Card.Body>
                            </Card>
                        </motion.div>
                    ))}
                </div>
            </motion.div>

            {/* Domaines du programme */}
            <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.5, duration: 0.5 }}
            >
                <h3 className="mt-5 mb-4 d-flex align-items-center">
                    <FiBook className="me-2" />
                    Domaines du Programme
                </h3>

                <div className="row g-4">
                    {programme.domaines.map((domaine) => (
                        <div key={domaine.id} className="col-md-6 col-lg-3">
                            <Card className="h-100 shadow-sm border-0">
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${domaine.color}20`,
                                                color: domaine.color
                                            }}
                                        >
                                            <span style={{ fontSize: "24px" }}>{domaine.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{domaine.title}</h5>
                                        </div>
                                    </div>

                                    <Accordion flush>
                                        {domaine.modules.map((module, i) => (
                                            <Accordion.Item key={`module-${i}`} eventKey={i.toString()} className="border-0">
                                                <Accordion.Header className="p-0 bg-transparent">
                                                    <div className="d-flex align-items-center">
                                                        <span className="me-2" style={{ fontSize: "18px" }}>{module.emoji}</span>
                                                        <small className="fw-bold">{module.title}</small>
                                                    </div>
                                                </Accordion.Header>
                                                <Accordion.Body className="p-0 pt-2">
                                                    <div className="mb-3">
                                                        <h6 className="small fw-bold">Objectifs:</h6>
                                                        <ul className="small mb-2">
                                                            {module.objectifs.map((obj, j) => (
                                                                <li key={`obj-${i}-${j}`}>{obj}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                    <div className="mb-3">
                                                        <h6 className="small fw-bold">Capacit√©s:</h6>
                                                        <ul className="small mb-2">
                                                            {module.capacites.map((cap, j) => (
                                                                <li key={`cap-${i}-${j}`}>{cap}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                    <div>
                                                        <h6 className="small fw-bold">Connaissances:</h6>
                                                        <ul className="small mb-0">
                                                            {module.connaissances.map((con, j) => (
                                                                <li key={`con-${i}-${j}`}>{con}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                </Accordion.Body>
                                            </Accordion.Item>
                                        ))}
                                    </Accordion>
                                </Card.Body>
                            </Card>
                        </div>
                    ))}
                </div>
            </motion.div>

            {/* Compl√©ments */}
            <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.6, duration: 0.5 }}
            >
                <h3 className="mt-5 mb-4 d-flex align-items-center">
                    <FiBook className="me-2" />
                    Compl√©ments
                </h3>

                <div className="row g-4">
                    {programme.complements.map((complement) => (
                        <div key={complement.id} className="col-md-4">
                            <Card className="h-100 shadow-sm border-0">
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${complement.color}20`,
                                                color: complement.color
                                            }}
                                        >
                                            <span style={{ fontSize: "24px" }}>{complement.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{complement.title}</h5>
                                        </div>
                                    </div>

                                    <ul className="mb-0">
                                        {complement.content.map((item, i) => (
                                            <li key={`item-${i}`} className="mb-1 small">
                                                {item.startsWith("- ") ? (
                                                    <span className="ms-3 d-block">{item}</span>
                                                ) : (
                                                    item
                                                )}
                                            </li>
                                        ))}
                                    </ul>
                                </Card.Body>
                            </Card>
                        </div>
                    ))}
                </div>
            </motion.div>
        </Container>
    );
};

export default ProgrammeTerminalePhysique_3;