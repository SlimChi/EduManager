import React from 'react';
import {useParams, useNavigate} from 'react-router-dom';
import {Container, Badge, Card, Accordion, ListGroup} from 'react-bootstrap';
import {
    FiBook, FiClock, FiList, FiArrowRight, FiBarChart2,
    FiPercent, FiCode, FiDollarSign, FiShapes, FiCheckCircle,
    FiAward, FiActivity, FiUsers, FiEdit, FiLayers, FiTrendingUp,
    FiCpu, FiPieChart, FiTarget, FiGlobe
} from 'react-icons/fi';
import BackButton from "../components/navigation/BackButton";
import {motion} from 'framer-motion';

const ProgrammePremiereMaths = () => {
    const {classId} = useParams();
    const navigate = useNavigate();

    // Structure du programme avec ajout d'ic√¥nes et couleurs
    const programme = {
        description: {
            title: "Math√©matiques - Premi√®re Professionnelle",
            content: "Programme complet pour la formation math√©matique en premi√®re professionnelle",
            emoji: "üßÆ",
            color: "#5f27cd"
        },
        preambule: {
            title: "Pr√©ambule commun",
            emoji: "üìú",
            color: "#1dd1a1",
            sections: [
                {
                    title: "Intentions majeures",
                    emoji: "üéØ",
                    icon: <FiAward size={18}/>,
                    content: [
                        "Consolider le socle commun de connaissances, comp√©tences et culture",
                        "Former √† l'activit√© math√©matique et scientifique",
                        "Fournir des outils utiles pour les enseignements g√©n√©raux et professionnels",
                        "Assurer les bases n√©cessaires pour la poursuite d'√©tudes",
                        "D√©velopper des comp√©tences transversales",
                        "Donner une culture scientifique et civique"
                    ]
                },
                {
                    title: "Comp√©tences travaill√©es",
                    emoji: "üí™",
                    icon: <FiActivity size={18}/>,
                    content: [
                        "S'approprier (rechercher, extraire et organiser l'information)",
                        "Analyser/Raisonner (√©mettre des conjectures, proposer des m√©thodes)",
                        "R√©aliser (mettre en ≈ìuvre des d√©marches, calculer, exp√©rimenter)",
                        "Valider (interpr√©ter des r√©sultats, argumenter, d√©montrer)",
                        "Communiquer (rendre compte, expliquer des d√©marches)"
                    ]
                },
                {
                    title: "Lignes directrices",
                    emoji: "üß≠",
                    icon: <FiEdit size={18}/>,
                    content: [
                        "La bivalence (coh√©rence entre math√©matiques et physique-chimie)",
                        "La ma√Ætrise de la langue fran√ßaise",
                        "La co-intervention avec les enseignements professionnels",
                        "La diversit√© des activit√©s de l'√©l√®ve",
                        "La trace √©crite (synth√®se d√©contextualis√©e)",
                        "Le travail exp√©rimental ou num√©rique",
                        "L'√©valuation des acquis"
                    ]
                }
            ]
        },
        organisation: {
            title: "Organisation du programme",
            emoji: "üóÇÔ∏è",
            color: "#ff6b6b",
            icon: <FiLayers size={18}/>,
            content: [
                "Statistique et probabilit√©s (2 modules)",
                "Alg√®bre - Analyse (5 modules)",
                "G√©om√©trie (3 modules)",
                "Compl√©ments : Automatismes, Algorithmique et programmation, Vocabulaire ensembliste et logique"
            ]
        },
        chapitres: [
            {
                id: "stats",
                title: "Statistique et probabilit√©s",
                emoji: "üìä",
                icon: <FiBarChart2 size={18}/>,
                color: "#ff6b6b",
                duration: "25h",
                sequences: 4
            },
            {
                id: "algebre",
                title: "Alg√®bre ‚Äì Analyse",
                emoji: "‚ûó",
                icon: <FiPercent size={18}/>,
                color: "#48dbfb",
                duration: "40h",
                sequences: 10
            },
            {
                id: "geometrie",
                title: "G√©om√©trie",
                emoji: "üìê",
                icon: <FiArrowRight size={18}/>,
                color: "#1dd1a1",
                duration: "20h",
                sequences: 6
            },
            {
                id: "algo",
                title: "Algorithmique",
                emoji: "üíª",
                icon: <FiCode size={18}/>,
                color: "#5f27cd",
                duration: "15h",
                sequences: 4
            },
            {
                id: "calculs_financiers",
                title: "Calculs financiers",
                emoji: "üí∞",
                icon: <FiDollarSign size={18}/>,
                color: "#feca57",
                duration: "12h",
                sequences: 3
            },
            {
                id: "cointervention",
                title: "Co-Intervention",
                emoji: "üßë‚Äçü§ù‚Äçüßë",
                icon: <FiUsers size={18}/>,
                color: "#ff9ff3",
                duration: "15h",
                sequences: 4
            }
        ],
        domaines: [
            {
                id: "stats",
                title: "Statistique et probabilit√©s",
                emoji: "üìä",
                color: "#ff6b6b",
                modules: [
                    {
                        title: "Statistique √† deux variables",
                        emoji: "üìà",
                        objectifs: [
                            "D√©terminer une √©quation de droite d'ajustement",
                            "Interpoler ou extrapoler des valeurs inconnues",
                            "√âvaluer la pertinence d'un ajustement affine"
                        ],
                        capacites: [
                            "Repr√©senter graphiquement un nuage de points",
                            "R√©aliser un ajustement affine avec outils num√©riques",
                            "D√©terminer l'√©quation d'une droite d'ajustement",
                            "Calculer le coefficient de d√©termination"
                        ],
                        connaissances: [
                            "Nuage de points associ√© √† une s√©rie statistique √† deux variables",
                            "Ajustement affine par la m√©thode des moindres carr√©s",
                            "Coefficient de d√©termination R¬≤",
                            "Interpr√©tation des r√©sultats"
                        ]
                    },
                    {
                        title: "Probabilit√©s conditionnelles",
                        emoji: "üé≤",
                        objectifs: [
                            "Mod√©liser une exp√©rience al√©atoire dans un univers fini",
                            "Calculer des probabilit√©s conditionnelles",
                            "Exploiter des tableaux crois√©s d'effectifs"
                        ],
                        capacites: [
                            "Calculer des probabilit√©s d'√©v√©nements",
                            "Compl√©ter et exploiter des tableaux crois√©s",
                            "Calculer des fr√©quences conditionnelles",
                            "D√©terminer des probabilit√©s conditionnelles"
                        ],
                        connaissances: [
                            "Probabilit√© d'un √©v√©nement dans un univers fini",
                            "√âv√©nements incompatibles, contraires",
                            "R√©union et intersection d'√©v√©nements",
                            "Probabilit√© conditionnelle"
                        ]
                    }
                ]
            },
            {
                id: "algebre",
                title: "Alg√®bre - Analyse",
                emoji: "‚ûó",
                color: "#48dbfb",
                modules: [
                    {
                        title: "Suites num√©riques",
                        emoji: "üì∂",
                        objectifs: [
                            "Mod√©liser des ph√©nom√®nes discrets par des suites",
                            "√âtudier le comportement de suites",
                            "R√©soudre des probl√®mes avec des suites arithm√©tiques"
                        ],
                        capacites: [
                            "G√©n√©rer les termes d'une suite",
                            "√âtudier le sens de variation d'une suite",
                            "Reconna√Ætre une suite arithm√©tique",
                            "Calculer la somme des termes d'une suite arithm√©tique"
                        ],
                        connaissances: [
                            "Notation indicielle des suites",
                            "Suites arithm√©tiques (d√©finition, raison)",
                            "Expression du terme de rang n",
                            "Somme des n premiers termes"
                        ]
                    },
                    {
                        title: "R√©solution graphique",
                        emoji: "üìâ",
                        objectifs: [
                            "R√©soudre graphiquement des √©quations et in√©quations",
                            "Utiliser les outils num√©riques pour l'analyse graphique"
                        ],
                        capacites: [
                            "R√©soudre ∆í(x) = g(x) graphiquement",
                            "R√©soudre ∆í(x) ‚â• g(x) graphiquement",
                            "Utiliser des logiciels de g√©om√©trie dynamique"
                        ],
                        connaissances: [
                            "R√©solution graphique d'√©quations",
                            "R√©solution graphique d'in√©quations",
                            "Interpr√©tation des solutions"
                        ]
                    },
                    {
                        title: "Fonctions polyn√¥mes du second degr√©",
                        emoji: "üìä",
                        objectifs: [
                            "D√©couvrir les fonctions polyn√¥mes de degr√© 2",
                            "√âtudier le signe d'un polyn√¥me de degr√© 2",
                            "Factoriser des polyn√¥mes du second degr√©"
                        ],
                        capacites: [
                            "Visualiser le nombre de solutions de ∆í(x) = 0",
                            "Donner l'allure de la repr√©sentation graphique",
                            "Tester si un nombre est racine d'un polyn√¥me",
                            "Factoriser un polyn√¥me de degr√© 2"
                        ],
                        connaissances: [
                            "Fonction polyn√¥me de degr√© 2",
                            "Racines r√©elles d'un polyn√¥me",
                            "Forme factoris√©e",
                            "Signe d'un polyn√¥me de degr√© 2"
                        ]
                    },
                    {
                        title: "D√©rivation",
                        emoji: "üìê",
                        objectifs: [
                            "Introduire la notion de nombre d√©riv√©",
                            "√âtudier les variations des fonctions d√©rivables",
                            "D√©terminer des extremums"
                        ],
                        capacites: [
                            "Construire une tangente √† une courbe",
                            "D√©terminer un nombre d√©riv√©",
                            "Calculer des fonctions d√©riv√©es",
                            "√âtudier les variations d'une fonction"
                        ],
                        connaissances: [
                            "Nombre d√©riv√©, tangente",
                            "Fonction d√©riv√©e",
                            "R√®gles de d√©rivation",
                            "Lien entre signe de la d√©riv√©e et variations"
                        ]
                    },
                    {
                        title: "Fonction inverse",
                        emoji: "‚ÜîÔ∏è",
                        objectifs: [
                            "√âtudier la fonction inverse",
                            "Utiliser ses propri√©t√©s dans des probl√®mes"
                        ],
                        capacites: [
                            "√âtudier la fonction inverse",
                            "Calculer sa d√©riv√©e",
                            "Dresser son tableau de variations",
                            "Tracer sa repr√©sentation graphique"
                        ],
                        connaissances: [
                            "D√©finition de la fonction inverse",
                            "D√©riv√©e de la fonction inverse",
                            "Variations de la fonction inverse",
                            "Repr√©sentation graphique"
                        ]
                    }
                ]
            },
            {
                id: "geometrie",
                title: "G√©om√©trie",
                emoji: "üìê",
                color: "#1dd1a1",
                modules: [
                    {
                        title: "G√©om√©trie dans l'espace",
                        emoji: "üî∫",
                        objectifs: [
                            "D√©velopper la vision dans l'espace",
                            "R√©aliser des sections de solides par un plan"
                        ],
                        capacites: [
                            "Repr√©senter des solides usuels",
                            "Exploiter une repr√©sentation d'un solide",
                            "R√©aliser la section d'un solide par un plan",
                            "Construire des sections planes"
                        ],
                        connaissances: [
                            "Solides usuels (cube, pyramide, cylindre, etc.)",
                            "Repr√©sentation dans l'espace",
                            "Section d'un solide par un plan",
                            "Perspective cavali√®re"
                        ]
                    },
                    {
                        title: "Vecteurs du plan",
                        emoji: "‚ûó",
                        objectifs: [
                            "Introduire les vecteurs comme outil d'√©tude",
                            "Utiliser les vecteurs en physique et math√©matiques"
                        ],
                        capacites: [
                            "Construire un repr√©sentant d'un vecteur",
                            "Reconna√Ætre des vecteurs √©gaux, colin√©aires",
                            "Calculer des sommes de vecteurs",
                            "D√©terminer des coordonn√©es de vecteurs"
                        ],
                        connaissances: [
                            "√âl√©ments caract√©ristiques d'un vecteur",
                            "Vecteurs √©gaux, oppos√©s, colin√©aires",
                            "Somme de vecteurs, produit par un r√©el",
                            "Coordonn√©es dans un rep√®re orthogonal"
                        ]
                    },
                    {
                        title: "Trigonom√©trie",
                        emoji: "üìè",
                        objectifs: [
                            "D√©couvrir des outils pour mod√©liser des ph√©nom√®nes p√©riodiques",
                            "Introduire la mesure en radians",
                            "√âtudier les fonctions sinus et cosinus"
                        ],
                        capacites: [
                            "Placer un point sur le cercle trigonom√©trique",
                            "Effectuer des conversions degr√©s/radians",
                            "D√©terminer cosinus et sinus d'un r√©el",
                            "Construire les courbes des fonctions trigonom√©triques"
                        ],
                        connaissances: [
                            "Cercle trigonom√©trique, radian",
                            "Cosinus et sinus d'un nombre r√©el",
                            "Valeurs particuli√®res",
                            "Fonctions sinus et cosinus"
                        ]
                    }
                ]
            },
            {
                id: "calculs_financiers",
                title: "Calculs financiers",
                emoji: "üí∞",
                color: "#feca57",
                modules: [
                    {
                        title: "Calculs commerciaux et financiers",
                        emoji: "üí∏",
                        objectifs: [
                            "R√©investir les suites arithm√©tiques et la d√©rivation",
                            "√âtudier des situations professionnelles avec calculs financiers"
                        ],
                        capacites: [
                            "Calculer des int√©r√™ts simples",
                            "D√©terminer des taux proportionnels",
                            "Calculer des co√ªts de production",
                            "D√©terminer des co√ªts marginaux et moyens"
                        ],
                        connaissances: [
                            "Int√©r√™ts simples, taux proportionnels",
                            "Capital, taux, dur√©e, valeur acquise",
                            "Co√ªt total, co√ªt marginal, co√ªt moyen",
                            "Optimisation de co√ªts"
                        ]
                    }
                ]
            },
            {
                id: "cointervention",
                title: "Co-intervention",
                emoji: "ü§ù",
                color: "#ff9ff3",
                modules: [
                    {
                        title: "Co-intervention p√©dagogique",
                        emoji: "üë®‚Äçüè´üîÅüìö",
                        objectifs: [
                            "Donner une dimension concr√®te aux apprentissages",
                            "Permettre une vision globale et transversale des enseignements",
                            "Mettre en ≈ìuvre des situations contextualis√©es en lien avec le r√©f√©rentiel professionnel"
                        ],
                        capacites: [
                            "Acqu√©rir simultan√©ment des comp√©tences professionnelles et des savoirs scientifiques",
                            "R√©investir des capacit√©s et connaissances en math√©matiques dans un nouveau contexte professionnel",
                            "R√©utiliser des comp√©tences professionnelles pour aborder des notions scientifiques"
                        ],
                        connaissances: [
                            "M√©thodologie d'analyse de situations probl√©matis√©es",
                            "Croisement entre r√©f√©rentiel professionnel et programmes scientifiques",
                            "Transversalit√© des savoirs et comp√©tences"
                        ]
                    }
                ]
            }
        ],
        complements: [
            {
                id: "algo",
                title: "Algorithmique",
                emoji: "üíª",
                color: "#5f27cd",
                icon: <FiCode size={18}/>,
                content: [
                    "Approfondir les notions de variable, instruction conditionnelle et boucles",
                    "Utiliser des fonctions et la programmation modulaire",
                    "Introduire la notion de liste",
                    "Travailler sur :",
                    "- Analyse et d√©composition de probl√®mes complexes",
                    "- Instructions conditionnelles et boucles avanc√©es",
                    "- Types de variables et structures de donn√©es",
                    "- Fonctions avec param√®tres et valeurs de retour",
                    "- G√©n√©ration et manipulation de listes"
                ]
            },
            {
                id: "automatismes",
                title: "Automatismes",
                emoji: "‚ö°",
                color: "#ff9ff3",
                icon: <FiCheckCircle size={18}/>,
                content: [
                    "Calcul de probabilit√©s dans des situations simples",
                    "D√©nombrements avec tableaux et arbres",
                    "Lecture et interpr√©tation de graphiques et diagrammes",
                    "R√©solution d'√©quations et in√©quations du premier degr√©",
                    "Reconnaissance de situations de proportionnalit√©",
                    "D√©termination d'extremums de fonctions",
                    "Calculs d'int√©r√™ts simples et valeurs acquises",
                    "Calculs d'aires et volumes de figures usuelles",
                    "D√©veloppement et factorisation d'expressions alg√©briques"
                ]
            },
            {
                id: "vocabulaire",
                title: "Vocabulaire logique",
                emoji: "üî§",
                color: "#48dbfb",
                icon: <FiBook size={18}/>,
                content: [
                    "Notations ensemblistes (‚àà, ‚äÇ, ‚à©, ‚à™, ‚àÅ)",
                    "Intervalles de nombres r√©els",
                    "Connecteurs logiques (et, ou)",
                    "Quantificateurs (quel que soit, il existe)",
                    "Implications et √©quivalences",
                    "R√©ciproque d'une implication",
                    "Raisonnement par l'absurde et par disjonction des cas",
                    "Utilisation de contre-exemples"
                ]
            }
        ]
    };

    const handleChapitreClick = (chapitreId) => {
        navigate(`/programmes/math/${classId}/ProgrammePremiereMaths/sequences/${chapitreId}`);
    };

    // Animation variants
    const cardVariants = {
        hover: {
            y: -5,
            boxShadow: "0 10px 20px rgba(0,0,0,0.1)"
        }
    };

    return (
        <Container className="programme-container py-4">
            <BackButton/>

            {/* En-t√™te du programme */}
            <motion.div
                initial={{opacity: 0, y: 20}}
                animate={{opacity: 1, y: 0}}
                transition={{duration: 0.5}}
            >
                <Card className="mb-4 border-0 shadow-sm" style={{backgroundColor: '#f8f9fa'}}>
                    <Card.Body className="d-flex align-items-center">
                        <div className="me-3 display-4" style={{color: programme.description.color}}>
                            {programme.description.emoji}
                        </div>
                        <div>
                            <h2 className="mb-1">{programme.description.title}</h2>
                            <p className="mb-0 text-muted">{programme.description.content}</p>
                        </div>
                    </Card.Body>
                </Card>
            </motion.div>

            {/* Pr√©ambule */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.2, duration: 0.5}}
            >
                <Accordion className="mb-4">
                    <Accordion.Item eventKey="0" className="border-0">
                        <Accordion.Header className="p-0">
                            <div className="d-flex align-items-center">
                                <div
                                    className="d-flex align-items-center justify-content-center me-3"
                                    style={{
                                        width: "40px",
                                        height: "40px",
                                        borderRadius: "8px",
                                        backgroundColor: `${programme.preambule.color}20`,
                                        color: programme.preambule.color
                                    }}
                                >
                                    <span style={{fontSize: "20px"}}>{programme.preambule.emoji}</span>
                                </div>
                                <h4 className="mb-0">{programme.preambule.title}</h4>
                            </div>
                        </Accordion.Header>
                        <Accordion.Body className="p-0 pt-3">
                            {programme.preambule.sections.map((section, index) => (
                                <Card key={index} className="mb-3 border-0 shadow-sm">
                                    <Card.Body>
                                        <div className="d-flex align-items-center mb-3">
                                            <div
                                                className="d-flex align-items-center justify-content-center me-3"
                                                style={{
                                                    width: "36px",
                                                    height: "36px",
                                                    borderRadius: "8px",
                                                    backgroundColor: `${programme.preambule.color}10`,
                                                    color: programme.preambule.color
                                                }}
                                            >
                                                <span style={{fontSize: "18px"}}>{section.emoji}</span>
                                            </div>
                                            <h5 className="mb-0">{section.title}</h5>
                                        </div>
                                        <ul className="mb-0">
                                            {section.content.map((item, i) => (
                                                <li key={i} className="mb-2 d-flex align-items-start">
                                                    <span className="me-2"
                                                          style={{color: programme.preambule.color}}>‚Ä¢</span>
                                                    {item}
                                                </li>
                                            ))}
                                        </ul>
                                    </Card.Body>
                                </Card>
                            ))}
                        </Accordion.Body>
                    </Accordion.Item>
                </Accordion>
            </motion.div>

            {/* Organisation du programme */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.3, duration: 0.5}}
            >
                <Card className="mb-4 border-0 shadow-sm">
                    <Card.Body>
                        <div className="d-flex align-items-center mb-3">
                            <div
                                className="d-flex align-items-center justify-content-center me-3"
                                style={{
                                    width: "40px",
                                    height: "40px",
                                    borderRadius: "8px",
                                    backgroundColor: `${programme.organisation.color}20`,
                                    color: programme.organisation.color
                                }}
                            >
                                <span style={{fontSize: "20px"}}>{programme.organisation.emoji}</span>
                            </div>
                            <h4 className="mb-0">{programme.organisation.title}</h4>
                        </div>
                        <ul className="mb-0">
                            {programme.organisation.content.map((item, index) => (
                                <li key={index} className="mb-2 d-flex align-items-start">
                                    <span className="me-2" style={{color: programme.organisation.color}}>‚Ä¢</span>
                                    {item}
                                </li>
                            ))}
                        </ul>
                    </Card.Body>
                </Card>
            </motion.div>

            {/* Chapitres principaux */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.4, duration: 0.5}}
            >
                <h3 className="mb-4 d-flex align-items-center">
                    <FiBook className="me-2"/>
                    Chapitres du Programme
                </h3>

                <div className="row g-4">
                    {programme.chapitres.map((chapitre) => (
                        <motion.div
                            key={chapitre.id}
                            className="col-md-6 col-lg-4"
                            whileHover="hover"
                            variants={cardVariants}
                        >
                            <Card
                                className="h-100 shadow-sm border-0"
                                style={{
                                    borderRadius: "12px",
                                    borderTop: `4px solid ${chapitre.color}`,
                                    cursor: "pointer"
                                }}
                                onClick={() => handleChapitreClick(chapitre.id)}
                            >
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${chapitre.color}20`,
                                                color: chapitre.color
                                            }}
                                        >
                                            <span style={{fontSize: "24px"}}>{chapitre.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{chapitre.title}</h5>
                                        </div>
                                    </div>

                                    <div className="d-flex justify-content-between mb-3">
                                        <Badge pill bg="light" text="dark" className="d-flex align-items-center">
                                            <FiClock className="me-1"/> {chapitre.duration}
                                        </Badge>
                                        <Badge pill bg="light" text="dark" className="d-flex align-items-center">
                                            <FiList className="me-1"/> {chapitre.sequences} s√©q.
                                        </Badge>
                                    </div>

                                    <div className="mt-auto text-end">
                                        <small
                                            className="text-primary fw-bold d-flex align-items-center justify-content-end">
                                            Explorer <FiArrowRight className="ms-1"/>
                                        </small>
                                    </div>
                                </Card.Body>
                            </Card>
                        </motion.div>
                    ))}
                </div>
            </motion.div>

            {/* Domaines du programme */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.5, duration: 0.5}}
            >
                <h3 className="mt-5 mb-4 d-flex align-items-center">
                    <FiBook className="me-2"/>
                    Domaines du Programme
                </h3>

                <div className="row g-4">
                    {programme.domaines.map((domaine) => (
                        <div key={domaine.id} className="col-md-6 col-lg-4">
                            <Card className="h-100 shadow-sm border-0">
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${domaine.color}20`,
                                                color: domaine.color
                                            }}
                                        >
                                            <span style={{fontSize: "24px"}}>{domaine.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{domaine.title}</h5>
                                        </div>
                                    </div>

                                    <Accordion flush>
                                        {domaine.modules.map((module, i) => (
                                            <Accordion.Item key={`module-${i}`} eventKey={i.toString()}
                                                            className="border-0">
                                                <Accordion.Header className="p-0 bg-transparent">
                                                    <div className="d-flex align-items-center">
                                                        <span className="me-2"
                                                              style={{fontSize: "18px"}}>{module.emoji}</span>
                                                        <small className="fw-bold">{module.title}</small>
                                                    </div>
                                                </Accordion.Header>
                                                <Accordion.Body className="p-0 pt-2">
                                                    <div className="mb-3">
                                                        <h6 className="small fw-bold">Objectifs:</h6>
                                                        <ul className="small mb-2">
                                                            {module.objectifs.map((obj, j) => (
                                                                <li key={`obj-${i}-${j}`}>{obj}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                    <div className="mb-3">
                                                        <h6 className="small fw-bold">Capacit√©s:</h6>
                                                        <ul className="small mb-2">
                                                            {module.capacites.map((cap, j) => (
                                                                <li key={`cap-${i}-${j}`}>{cap}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                    <div>
                                                        <h6 className="small fw-bold">Connaissances:</h6>
                                                        <ul className="small mb-0">
                                                            {module.connaissances.map((con, j) => (
                                                                <li key={`con-${i}-${j}`}>{con}</li>
                                                            ))}
                                                        </ul>
                                                    </div>
                                                </Accordion.Body>
                                            </Accordion.Item>
                                        ))}
                                    </Accordion>
                                </Card.Body>
                            </Card>
                        </div>
                    ))}
                </div>
            </motion.div>

            {/* Compl√©ments */}
            <motion.div
                initial={{opacity: 0}}
                animate={{opacity: 1}}
                transition={{delay: 0.6, duration: 0.5}}
            >
                <h3 className="mt-5 mb-4 d-flex align-items-center">
                    <FiBook className="me-2"/>
                    Compl√©ments
                </h3>

                <div className="row g-4">
                    {programme.complements.map((complement) => (
                        <div key={complement.id} className="col-md-4">
                            <Card className="h-100 shadow-sm border-0">
                                <Card.Body className="d-flex flex-column">
                                    <div className="d-flex align-items-center mb-3">
                                        <div
                                            className="d-flex align-items-center justify-content-center me-3"
                                            style={{
                                                width: "48px",
                                                height: "48px",
                                                borderRadius: "10px",
                                                backgroundColor: `${complement.color}20`,
                                                color: complement.color
                                            }}
                                        >
                                            <span style={{fontSize: "24px"}}>{complement.emoji}</span>
                                        </div>
                                        <div>
                                            <h5 className="mb-0 fw-bold">{complement.title}</h5>
                                        </div>
                                    </div>

                                    <ul className="mb-0">
                                        {complement.content.map((item, i) => (
                                            <li key={`item-${i}`} className="mb-1 small">
                                                {item.startsWith("- ") ? (
                                                    <span className="ms-3 d-block">{item}</span>
                                                ) : (
                                                    item
                                                )}
                                            </li>
                                        ))}
                                    </ul>
                                </Card.Body>
                            </Card>
                        </div>
                    ))}
                </div>
            </motion.div>
        </Container>
    );
};

export default ProgrammePremiereMaths;